# This file is a template, and might need editing before it works on your project.
# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle
image: gradle:alpine

stages:
  - compile
  - test
  - validate
  - report


variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

build:
  stage: compile
  script: gradle --build-cache build -x findBugsMain -x findBugsTest -x checkstyleMain -x checkstyleTest -x test -x spotbugsMain -x spotbugsTest
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

test:
  stage: test
  script: gradle test -x findBugsMain -x findBugsTest -x checkstyleMain -x checkstyleTest -x spotbugsMain -x spotbugsTest
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle

checkstyle:
  stage: validate
  script: gradle checkstyle
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
    - build
    - .gradle

findbugs:
  stage: validate
  script: gradle findBugsMain
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
    - build
    - .gradle

spotbugs:
  stage: validate
  script: gradle spotbugsMain
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
    - build
    - .gradle

code_quality:
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
  - docker:stable-dind
  script:
  - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
  - docker run
      --env SOURCE_CODE="$PWD"
      --volume "$PWD":/code
      --volume /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
  artifacts:
    reports:
      codequality: gl-code-quality-report.json


